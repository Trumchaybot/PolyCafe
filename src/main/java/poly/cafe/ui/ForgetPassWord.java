/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.cafe.ui;

import java.awt.Color;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Random;
import javax.mail.MessagingException;
import poly.cafe.dao.EmployeeInfoDAO;
import poly.cafe.dao.OTPDAO;
import poly.cafe.dao.impl.EmployeeInfoDAOImpl;
import poly.cafe.dao.impl.OTPDAOImpl;
import poly.cafe.entity.EmployeeInfo;
import poly.cafe.entity.OTP;
import poly.cafe.util.XDialog;
import poly.cafe.util.XMail;

/**
 *
 * @author admin
 */
public class ForgetPassWord extends javax.swing.JFrame {

    private final OTPDAO daoOtp = new OTPDAOImpl();
    private final EmployeeInfoDAO daoEmp = new EmployeeInfoDAOImpl();

    /**
     * Creates new form c
     */
    public ForgetPassWord() {
        initComponents();
        txtUserName.setText("test");
        txtEmail.setText("clonekeugoi1@gmail.com");
    }

    public void resetNofiti() {
        jLabel7.setText("");
        jLabel8.setText("");
        jLabel9.setText("");
        jLabel10.setText("");
        jLabel11.setText("");
        jLabel12.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnGetOPT = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtOTP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNewPassWord = new javax.swing.JTextField();
        txtConfirmPass = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Quên mật khẩu");

        jLabel2.setText("Tài khoản:");

        jLabel3.setText("Email:");

        jLabel4.setText("Mật khẩu mới:");

        jLabel5.setText("Xác nhận mật khẩu:");

        btnGetOPT.setText("Lấy mã OTP");
        btnGetOPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetOPTActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã OTP:");

        jLabel7.setText("nofiti");

        jLabel8.setText("nofiti");

        jLabel9.setText("nofiti");

        jLabel10.setText("nofiti");

        jLabel11.setText("nofiti");

        btnSubmit.setText("Xác nhận");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");

        jLabel12.setText("nofiti");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(82, 82, 82))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUserName)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGetOPT))
                    .addComponent(txtOTP)
                    .addComponent(txtNewPassWord)
                    .addComponent(txtConfirmPass)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addComponent(jLabel12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetOPT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNewPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnExit))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetOPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetOPTActionPerformed
        // TODO add your handling code here:
        try {
            this.createAndSendOTP();
        } catch (Exception e) {
            e.printStackTrace();
            XDialog.alert(this, "Lỗi khi gửi OTP: " + e.getMessage());
        }
    }//GEN-LAST:event_btnGetOPTActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        resetNofiti();
        
        String userName = txtUserName.getText().trim();
        String email = txtEmail.getText().trim();
        String otpCode = txtOTP.getText().trim();
        String newPass = txtNewPassWord.getText().trim();
        String confirmPass = txtConfirmPass.getText().trim();

        if (verifyOTP(userName, email, otpCode)) {
            resetPassword(userName, newPass, confirmPass);
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgetPassWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgetPassWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgetPassWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgetPassWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgetPassWord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGetOPT;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtConfirmPass;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNewPassWord;
    private javax.swing.JTextField txtOTP;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
private String generateOTP() {
        Random rand = new Random();
        int otp = 100000 + rand.nextInt(900000);
        return String.valueOf(otp);
    }

    public OTP createAndSendOTP() throws MessagingException, UnsupportedEncodingException {
        resetNofiti();
        // Lấy dữ liệu từ form
        String userName = txtUserName.getText().trim();
        String email = txtEmail.getText().trim();

        if (userName.isEmpty() || email.isEmpty()) {
            jLabel12.setForeground(Color.RED);
            jLabel12.setText("Vui lòng nhập đầy đủ Tài khoản và Email!");
            return null;
        }

        EmployeeInfo emp = daoEmp.findByUserName(userName); // cần viết hàm này trong DAO
        if (emp == null) {
            jLabel7.setForeground(Color.RED);
            jLabel7.setText("Tài khoản không tồn tại!");
            return null;
        }
        if (!emp.getEmail().equalsIgnoreCase(email)) {
            jLabel8.setForeground(Color.RED);
            jLabel8.setText("Email không khớp với tài khoản!");
            return null;
        }

        // 1. Sinh mã OTP
        String otpCode = generateOTP();
        Date now = new Date();
        Date expiredAt = new Date(now.getTime() + (5 * 60 * 1000)); // hết hạn 5 phút

        // 2. Tạo đối tượng OTP
        OTP otp = new OTP();
        otp.setUserName(userName);
        otp.setEmail(email);
        otp.setOtpCode(otpCode);
        otp.setCreatedAt(now);
        otp.setExpiredAt(expiredAt);

        // 3. Lưu OTP vào DB
        daoOtp.create(otp);

        // 4. Gửi mail
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE, dd/MM/yyyy HH:mm:ss", new Locale("vi", "VN"));
        String expiredStr = sdf.format(expiredAt);
        String to = email;
        String content = "<div style='font-family: Arial, sans-serif; color:#333; line-height:1.6;'>"
                + "<h2 style='color:#4CAF50;'>Xin chào " + userName + ",</h2>"
                + "<p>Vui lòng xác thực mã OTP để đổi mật khẩu.</p>"
                + "<p style='font-size:16px;'>Mã OTP của bạn là:</p>"
                + "<div style='background:#f4f4f4; padding:10px; border:1px solid #ddd; "
                + "border-radius:5px; text-align:center; font-size:20px; font-weight:bold; color:#e74c3c;'>"
                + otpCode + "</div>"
                + "<p>Mã này có hiệu lực đến: <b>" + expiredStr + "</b></p>"
                + "<p style='color:#e67e22;'><i>⚠️ Vui lòng không chia sẻ mã này cho bất kỳ ai.</i></p>"
                + "<hr style='margin:20px 0;'>"
                + "<p style='font-size:12px; color:#999;'>Đây là email tự động, vui lòng không trả lời.</p>"
                + "</div>";

        XMail.sendOPT(to, content); // gửi OTP tới email người dùng

        jLabel12.setForeground(new Color(0, 128, 0));
        jLabel12.setText("Đã gửi mã OTP đến email.");

        return otp;
    }

    public boolean verifyOTP(String userName, String email, String otpCode) {
        OTP otp = daoOtp.findLatestByUser(userName, email);
        if (otp == null) {
            jLabel9.setForeground(Color.RED);
            jLabel9.setText("Không tìm thấy mã OTP!");
            return false;
        }

        Date now = new Date();
        if (now.after(otp.getExpiredAt())) {
            jLabel9.setForeground(Color.RED);
            jLabel9.setText("Mã OTP đã hết hạn!");
            return false;
        }

        if (!otp.getOtpCode().equals(otpCode)) {;
            jLabel9.setForeground(Color.RED);
            jLabel9.setText("Mã OTP không đúng!");
            return false;
        }

        return true; // xác thực thành công
    }

    public boolean resetPassword(String userName, String newPassword, String confirmPassword) {
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
            jLabel10.setForeground(Color.RED);
            jLabel10.setText("Vui lòng nhập mật khẩu mới!");
            return false;
        }

        if (!newPassword.equals(confirmPassword)) {
            jLabel11.setForeground(Color.RED);
            jLabel11.setText("Mật khẩu nhập lại không khớp!");
            return false;
        }

        EmployeeInfo emp = daoEmp.findByUserName(userName);
        if (emp == null) {
            jLabel7.setForeground(Color.RED);
            jLabel7.setText("Tài khoản không tồn tại!");
            return false;
        }

        emp.setPassWord(newPassword);
        daoEmp.updatePassWord(emp);

        jLabel12.setForeground(new Color(0, 128, 0));
        jLabel12.setText("Đổi mật khẩu thành công!");
        return true;
    }

}
