/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.component;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import poly.cafe.dao.NguyenVatLieuDAO;
import poly.cafe.dao.impl.NguyenVatLieuDAOImpl;
import poly.cafe.entity.NguyenVatLieu;
import poly.cafe.ui.component.controller.QuanLyVatLieuController;

/**
 *
 * @author admin
 */
public class QuanLyVatLieu extends javax.swing.JPanel implements QuanLyVatLieuController{
    NguyenVatLieuDAO dao = new NguyenVatLieuDAOImpl();
    /**
     * Creates new form QLVL
     */
    public QuanLyVatLieu() {
        initComponents();
        open();
    }
private void setCheckedAll(boolean b) {
        DefaultTableModel model = (DefaultTableModel) tblVatlieu.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(b, i, 5);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVatlieu = new javax.swing.JTable();
        btncheckAll = new javax.swing.JButton();
        btnuncheckAll = new javax.swing.JButton();
        btndeleteCheckedItems = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        tblVatlieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên vật liệu", "Đơn vị", "Đơn giá", "Số Lượng tồn", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVatlieu);

        btncheckAll.setText("Chọn tất cả");
        btncheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckAllActionPerformed(evt);
            }
        });

        btnuncheckAll.setText("Bỏ mục đã chọn");
        btnuncheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuncheckAllActionPerformed(evt);
            }
        });

        btndeleteCheckedItems.setText("Xóa mục đã chọn");
        btndeleteCheckedItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteCheckedItemsActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm vật liệu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(368, Short.MAX_VALUE)
                .addComponent(btncheckAll)
                .addGap(18, 18, 18)
                .addComponent(btnuncheckAll)
                .addGap(18, 18, 18)
                .addComponent(btndeleteCheckedItems)
                .addGap(18, 18, 18)
                .addComponent(btnAdd)
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncheckAll)
                    .addComponent(btnuncheckAll)
                    .addComponent(btndeleteCheckedItems)
                    .addComponent(btnAdd))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btncheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckAllActionPerformed
        // TODO add your handling code here:
        this.checkAll();
    }//GEN-LAST:event_btncheckAllActionPerformed

    private void btnuncheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuncheckAllActionPerformed
        // TODO add your handling code here:
        this.uncheckAll();
    }//GEN-LAST:event_btnuncheckAllActionPerformed

    private void btndeleteCheckedItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteCheckedItemsActionPerformed
        // TODO add your handling code here:
        this.deleteCheckedItems();
    }//GEN-LAST:event_btndeleteCheckedItemsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btncheckAll;
    private javax.swing.JButton btndeleteCheckedItems;
    private javax.swing.JButton btnuncheckAll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVatlieu;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
        fillToTable();
    }

   @Override
public void fillToTable() {
    DefaultTableModel model = (DefaultTableModel) tblVatlieu.getModel();
    model.setRowCount(0); // Xóa bảng cũ

    NguyenVatLieuDAO dao = new NguyenVatLieuDAOImpl();
    List<NguyenVatLieu> list = dao.findAll(); // Lấy danh sách nguyên vật liệu

    for (NguyenVatLieu nvl : list) {
        Object[] row = {
            nvl.getVatLieuId(),
            nvl.getTenVatLieu(),
            nvl.getDonVi(),
            nvl.getDonGia(),
            nvl.getSoLuongTon()
        };
        model.addRow(row); // Thêm từng dòng vào bảng
    }
}


    @Override
    public void checkAll() {
        this.setCheckedAll(true);
    }

    @Override
    public void uncheckAll() {
        this.setCheckedAll(false);
    }

    @Override
    public void deleteCheckedItems() {
        DefaultTableModel model = (DefaultTableModel) tblVatlieu.getModel();
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            Boolean checked = (Boolean) model.getValueAt(i, 5);
            if (checked != null && checked) {
                Integer id = (Integer) model.getValueAt(i, 0);
                dao.deleteById(id);
                model.removeRow(i);
            }
        }
    }

    @Override
    public void edit() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
