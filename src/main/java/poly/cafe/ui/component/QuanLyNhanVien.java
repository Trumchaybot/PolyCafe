/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.component;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import poly.cafe.dao.impl.EmployeeInfoDAOImpl;
import poly.cafe.entity.Role;
import poly.cafe.entity.EmployeeInfo;
import poly.cafe.ui.component.controller.QuanLyNhanVienController;
import poly.cafe.ui.manager.ThongTinNVManagerJDialog;
import poly.cafe.dao.EmployeeInfoDAO;

/**
 *
 * @author admin
 */
public class QuanLyNhanVien extends javax.swing.JPanel implements QuanLyNhanVienController {

    EmployeeInfoDAO dao = new EmployeeInfoDAOImpl();
private Frame owner;
    /**
     * Creates new form QLNSJdialog
     */
    public QuanLyNhanVien() {
        initComponents();
        open();
        this.Front();
    }
    public QuanLyNhanVien(Frame owner) {
    this.owner = owner;
    initComponents();
    open();
}

    private void setCheckedAll(boolean b) {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(b, i, 11);
        }
    }

    public void Front(){
        jPanel1.setBackground(new Color(255,255,200));
        btnuncheckAll.setBackground(new Color(255,255,230));
        btndeleteCheckedItems.setBackground(new Color(255,255,230));
        jButton4.setBackground(new Color(255,255,230));
        btncheckAll.setBackground(new Color(255,255,230));
        jScrollPane1.getViewport().setBackground(new Color(255, 255, 230));
        tblNhanVien.setSelectionBackground(new Color(255, 255, 230)); // cùng màu nền bạn set
tblNhanVien.setSelectionForeground(Color.BLACK);   
        JTableHeader header = tblNhanVien.getTableHeader();
header.setDefaultRenderer(new DefaultTableCellRenderer() {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {

        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        c.setBackground(new Color(255, 255, 230)); // Màu be nhạt
        c.setFont(new Font("Segoe UI", Font.BOLD, 14)); // Font đậm
        setHorizontalAlignment(CENTER);            // Canh giữa chữ

        return c;
    }
});
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        btncheckAll = new javax.swing.JButton();
        btnuncheckAll = new javax.swing.JButton();
        btndeleteCheckedItems = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "UserName", "PassWord", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Email", "Chức vụ", "Hình ảnh", "Trạng thái", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.setToolTipText("");
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        btncheckAll.setText("Chọn tất cả");
        btncheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckAllActionPerformed(evt);
            }
        });

        btnuncheckAll.setText("Bỏ mục đã chọn");
        btnuncheckAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuncheckAllActionPerformed(evt);
            }
        });

        btndeleteCheckedItems.setText("Xóa mục đã chọn");
        btndeleteCheckedItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteCheckedItemsActionPerformed(evt);
            }
        });

        jButton4.setText("Thêm nhân sự");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1027, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(445, 445, 445)
                            .addComponent(btncheckAll)
                            .addGap(18, 18, 18)
                            .addComponent(btnuncheckAll)
                            .addGap(18, 18, 18)
                            .addComponent(btndeleteCheckedItems)
                            .addGap(18, 18, 18)
                            .addComponent(jButton4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 554, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGap(28, 28, 28)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btncheckAll)
                        .addComponent(btnuncheckAll)
                        .addComponent(btndeleteCheckedItems)
                        .addComponent(jButton4))
                    .addGap(3, 3, 3)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btncheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckAllActionPerformed
        // TODO add your handling code here:
        this.checkAll();
    }//GEN-LAST:event_btncheckAllActionPerformed

    private void btnuncheckAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuncheckAllActionPerformed
        // TODO add your handling code here:
        this.uncheckAll();
    }//GEN-LAST:event_btnuncheckAllActionPerformed

    private void btndeleteCheckedItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteCheckedItemsActionPerformed
        // TODO add your handling code here:
        this.deleteCheckedItems();
    }//GEN-LAST:event_btndeleteCheckedItemsActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       ThongTinNVManagerJDialog dialog = new ThongTinNVManagerJDialog(owner, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
         if (evt.getClickCount() == 2) {
            this.edit();
        }
    }//GEN-LAST:event_tblNhanVienMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncheckAll;
    private javax.swing.JButton btndeleteCheckedItems;
    private javax.swing.JButton btnuncheckAll;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNhanVien;
    // End of variables declaration//GEN-END:variables

    @Override
    public void open() {
        this.fillToTable();
    }

    @Override
    public void fillToTable() {
    DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ

    List<EmployeeInfo> list = dao.findAll();

    for (EmployeeInfo nv : list) {
        Object[] row = {
            nv.getUserName(),
            nv.getPassWord(),
            nv.getFullName(),
            nv.getGender(),
            nv.getBirthDate(),
            nv.getAddress(),
            nv.getPhoneNumber(),
            nv.getEmail(),  
            nv.getRole().getRole(),
            nv.getPhoto(),
            nv.getStatus(),
            
        };
        model.addRow(row);
    }
}


    @Override
    public void checkAll() {
        this.setCheckedAll(true);
    }

    @Override
    public void uncheckAll() {
        this.setCheckedAll(false);
    }

    @Override
public void deleteCheckedItems() {
    DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
    for (int i = model.getRowCount() - 1; i >= 0; i--) {
        Boolean checked = (Boolean) model.getValueAt(i, 12); // Cột checkbox
        if (checked != null && checked) {
            String userName = (String) model.getValueAt(i, 0); // UserName là khóa chính
            dao.deleteById(userName);
            model.removeRow(i);
        }
    }
}


    @Override
public void edit() {
    int selectedRow = tblNhanVien.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(null, "Vui lòng chọn một nhân viên để chỉnh sửa.");
        return;
    }

    // Lấy UserName (khóa chính) từ bảng
    String userName = (String) tblNhanVien.getValueAt(selectedRow, 0);

    // Tìm nhân viên từ database
    EmployeeInfo nv = dao.findById(userName);
    if (nv == null) {
        JOptionPane.showMessageDialog(null, "Không tìm thấy thông tin nhân viên!");
        return;
    }

    // Mở JDialog và đổ dữ liệu vào
    ThongTinNVManagerJDialog dialog = new ThongTinNVManagerJDialog(null, true);
    dialog.setForm(nv); // Hàm setForm để set các giá trị vào textfield, combobox, radio...
    dialog.setVisible(true);

    // Sau khi đóng dialog có thể cập nhật lại bảng nếu có thay đổi
    fillToTable();
}


}
