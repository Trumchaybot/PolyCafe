/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.cafe.ui.manager;

import java.awt.Color;
import java.awt.Frame;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import poly.cafe.dao.impl.AreaDetailsDAOImpl;
import poly.cafe.dao.impl.ProductionStagesDAOImpl;
import poly.cafe.dao.impl.AreasDAOImpl;
import poly.cafe.dao.impl.EmployeeInfoDAOImpl;
import poly.cafe.entity.AreaDetails;
import poly.cafe.entity.ProductionStages;
import poly.cafe.entity.Areas;
import poly.cafe.entity.Role;
import poly.cafe.entity.EmployeeInfo;
import poly.cafe.ui.manager.controller.ChiTietKhuVucController;
import poly.cafe.util.XDate;
import poly.cafe.util.XDialog;
import poly.cafe.dao.AreaDetailsDAO;

/**
 *
 * @author admin
 */
public class AreaDetailsJDialog extends javax.swing.JFrame implements ChiTietKhuVucController {
    AreaDetailsDAO dao = new AreaDetailsDAOImpl();
    private List<EmployeeInfo> nvList = new ArrayList<>();
    private List<Areas> khuVucList = new ArrayList<>();
    private List<ProductionStages> khauList = new ArrayList<>();
    private int khuVucId;
    private int selectedId = -1; 

    /**
     * Creates new form ChiTietKhuVucJDialog
     */
    public AreaDetailsJDialog() {
        initComponents();
    }

    public AreaDetailsJDialog(Frame owner, boolean modal) {
        super();
        initComponents();
        txtNgayPhanCong.setEditable(false);
    }
private void setCheckedAll(boolean b) {
        DefaultTableModel model = (DefaultTableModel) tblChiTietKhuVuc.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(b, i, 4);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cboKhuVuc2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietKhuVuc = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        lblnofity = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboKhuVuc = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboKhauLamViec = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboNhanVien = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtNgayPhanCong = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lblRole = new javax.swing.JLabel();
        lblnofity2 = new javax.swing.JLabel();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsStateChanged(evt);
            }
        });

        cboKhuVuc2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKhuVuc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhuVuc2ActionPerformed(evt);
            }
        });

        tblChiTietKhuVuc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nhân viên", "Chức vụ", "Khâu làm việc", "Ngày phân công", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChiTietKhuVuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietKhuVucMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChiTietKhuVuc);

        jButton2.setText("Thêm nhân viên");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setText("Chọn tất cả");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Bỏ chọn tất cả");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Xóa mục đã chọn");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        lblnofity.setText("nofity");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblnofity)
                .addContainerGap(358, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(cboKhuVuc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton2)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(lblnofity))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(cboKhuVuc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton2)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        tabs.addTab("Danh sách", jPanel1);

        jLabel1.setText("Khu Vực:");

        cboKhuVuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Khâu làm việc:");

        cboKhauLamViec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Nhân viên:");

        cboNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNhanVienActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngày phân công:");

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Sửa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Xóa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Nhập mới");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        lblRole.setText("Chọn nhân viên");

        lblnofity2.setText("nofity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRole))
                            .addComponent(cboKhuVuc, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboKhauLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblnofity2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboKhuVuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgayPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cboKhauLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRole)))
                .addGap(31, 31, 31)
                .addComponent(lblnofity2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(224, Short.MAX_VALUE))
        );

        tabs.addTab("Biểu mẫu", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 409, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.open();
    }//GEN-LAST:event_formWindowOpened

    private void cboNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNhanVienActionPerformed
        // TODO add your handling code here:
      String username = (String) cboNhanVien.getSelectedItem();
    EmployeeInfo nv = nvList.stream()
                          .filter(x -> x.getUserName().equals(username))
                          .findFirst()
                          .orElse(null);
    if (nv != null) {
        lblRole.setText("Chức vụ: " + nv.getRole().getRoleName());
    }
    }//GEN-LAST:event_cboNhanVienActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.create();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboKhuVuc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhuVuc2ActionPerformed
        // TODO add your handling code here:
         int selectedIndex = cboKhuVuc2.getSelectedIndex();
    if (selectedIndex >= 0 && selectedIndex < khuVucList.size()) {
        int khuVucId = khuVucList.get(selectedIndex).getAreaId();
        fillToTable(khuVucId);
    }
    }//GEN-LAST:event_cboKhuVuc2ActionPerformed

    private void tblChiTietKhuVucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietKhuVucMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) { // Double click
            edit();
        }
    }//GEN-LAST:event_tblChiTietKhuVucMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.checkAll();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.uncheckAll();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsStateChanged
        // TODO add your handling code here:
        Date now = XDate.now();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    txtNgayPhanCong.setText(sdf.format(now));
    lblnofity.setText("");
    lblnofity2.setText("");
    }//GEN-LAST:event_tabsStateChanged

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        this.deleteCheckedItems();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        tabs.setSelectedIndex(1);
        this.clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AreaDetailsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AreaDetailsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AreaDetailsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AreaDetailsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AreaDetailsJDialog().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboKhauLamViec;
    private javax.swing.JComboBox<String> cboKhuVuc;
    private javax.swing.JComboBox<String> cboKhuVuc2;
    private javax.swing.JComboBox<String> cboNhanVien;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblnofity;
    private javax.swing.JLabel lblnofity2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChiTietKhuVuc;
    private javax.swing.JTextField txtNgayPhanCong;
    // End of variables declaration//GEN-END:variables

    @Override
public void fillToTable() {
}


    @Override
    public void open() {
this.fillComboBoxKhauLamViec();
        this.fillComboBoxKhuVuc();
        this.fillComboBoxNhanVien();
        this.fillComboBoxKhuVuc2();
     //   this.fillToTable();
     this.fillToTable(khuVucId);
    }

    @Override
    public void checkAll() {
        this.setCheckedAll(true);

    }

    @Override
    public void uncheckAll() {
        this.setCheckedAll(false);

    }
@Override
public void deleteCheckedItems() {
    DefaultTableModel model = (DefaultTableModel) tblChiTietKhuVuc.getModel();
    for (int i = model.getRowCount() - 1; i >= 0; i--) {
        Boolean checked = (Boolean) model.getValueAt(i, 4);
        if (Boolean.TRUE.equals(checked)) {
            String username = model.getValueAt(i, 0).toString();
            dao.deleteByUsername(username);
            model.removeRow(i);
        }
    }
    lblnofity.setForeground(new Color(0, 128, 0));
    lblnofity.setText("Xóa thành công!");
}



private AreaDetails getForm() {
    AreaDetails entity = new AreaDetails();

    Object kvObj = cboKhuVuc.getSelectedItem();
    Object nvObj = cboNhanVien.getSelectedItem();
    Object khauObj = cboKhauLamViec.getSelectedItem();

    Areas kv = null;
    EmployeeInfo nv = null;
    ProductionStages khau = null;

    if (kvObj instanceof Areas) {
        kv = (Areas) kvObj;
    } else if (kvObj instanceof String) {
        for (Areas item : khuVucList) {
            if (item.getAreaName().equals(kvObj)) {
                kv = item;
                break;
            }
        }
    }

    if (nvObj instanceof EmployeeInfo) {
        nv = (EmployeeInfo) nvObj;
    } else if (nvObj instanceof String) {
        for (EmployeeInfo item : nvList) {
            if (item.getUserName().equals(nvObj)) {
                nv = item;
                break;
            }
        }
    }

    if (khauObj instanceof ProductionStages) {
        khau = (ProductionStages) khauObj;
    } else if (khauObj instanceof String) {
        for (ProductionStages item : khauList) {
            if (item.getProductionStagesName().equals(khauObj)) {
                khau = item;
                break;
            }
        }
    }

    if (kv == null || nv == null || khau == null) return null;

    entity.setAreaId(kv.getAreaId());
    entity.setUserName(nv.getUserName());
    entity.setRoleId(nv.getRole().getRoleId());
    entity.setProductionStagesId(khau.getProductionStagesId());
    entity.setAssignDate(XDate.now());

    return entity;
}



private void setForm(AreaDetails entity) {
    selectedId = entity.getId();
    // --- Chọn KhuVuc ---
    String tenKhuVuc = "";
    for (Areas kv : khuVucList) {
        if (kv.getAreaId()== entity.getAreaId()) {
            tenKhuVuc = kv.getAreaName(); // Lấy tên khu vực để hiển thị
            break;
        }
    }
    cboKhuVuc.setSelectedItem(tenKhuVuc.isEmpty() 
            ? String.valueOf(entity.getAreaId()) 
            : tenKhuVuc);

    // --- Chọn Nhân viên (chỉ lấy UserName) ---
    cboNhanVien.setSelectedItem(entity.getUserName());

    // --- Chọn Khâu sản xuất ---
    String tenKhau = "";
    for (ProductionStages khau : khauList) {
        if (khau.getProductionStagesId()== entity.getProductionStagesId()) {
            tenKhau = khau.getProductionStagesName(); // Lấy tên khâu để hiển thị
            break;
        }
    }
    cboKhauLamViec.setSelectedItem(tenKhau.isEmpty()
            ? String.valueOf(entity.getProductionStagesId())
            : tenKhau);

    // --- Gán ngày ---
    txtNgayPhanCong.setText(
        XDate.format(entity.getAssignDate(), "dd/MM/yyyy")
    );
}

    private void fillComboBoxNhanVien() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        nvList = new EmployeeInfoDAOImpl().findAll(); // Lưu danh sách

        for (EmployeeInfo nv : nvList) {
            model.addElement(nv.getUserName());
        }

        cboNhanVien.setModel(model);
    }

    private void setSelectedNhanVien(String nvId) {
        for (int i = 0; i < nvList.size(); i++) {
            if (nvList.get(i).getUserName() == nvId) {
                cboNhanVien.setSelectedIndex(i);
                break;
            }
        }
    }

private void fillComboBoxKhuVuc() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        khuVucList = new AreasDAOImpl().findAll(); // Lưu danh sách

        for (Areas kv : khuVucList) {
            model.addElement(kv.getAreaName());
        }

        cboKhuVuc.setModel(model);
    }
    private void setSelectedKhuVuc(int khuVucId) {
        for (int i = 0; i < khuVucList.size(); i++) {
            if (khuVucList.get(i).getAreaId()== khuVucId) {
                cboKhuVuc.setSelectedIndex(i);
                break;
            }
        }
    }
private void fillComboBoxKhuVuc2() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
    khuVucList = new AreasDAOImpl().findAll();

    for (Areas kv : khuVucList) {
        model.addElement(kv.getAreaName());
    }

    cboKhuVuc2.setModel(model);

    // Load mặc định khu đầu tiên
    if (!khuVucList.isEmpty()) {
        fillToTable(khuVucList.get(0).getAreaId());
    };
    }
    private void setSelectedKhuVuc2(int khuVucId) {
        for (int i = 0; i < khuVucList.size(); i++) {
            if (khuVucList.get(i).getAreaId()== khuVucId) {
                cboKhuVuc2.setSelectedIndex(i);
                break;
            }
        }
    }
    private void fillComboBoxKhauLamViec() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        khauList = new ProductionStagesDAOImpl().findAll(); // Lưu danh sách

        for (ProductionStages khau : khauList) {
            model.addElement(khau.getProductionStagesName());
        }

        cboKhauLamViec.setModel(model);
    }

    private void setSelectedKhauSanXuat(int khauId) {
        for (int i = 0; i < khauList.size(); i++) {
            if (khauList.get(i).getProductionStagesId()== khauId) {
                cboKhuVuc.setSelectedIndex(i);
                break;
            }
        }
    }
    public void create() {
    AreaDetails entity = getForm();
    if (entity == null) {
        lblnofity2.setForeground(Color.red);
        lblnofity2.setText("Vui lòng nhập đầy đủ thông tin!");
        return;
    }
    if (txtNgayPhanCong.getText().trim().isEmpty()) {
        entity.setAssignDate(XDate.now());
    } else {
        entity.setAssignDate(XDate.parse(txtNgayPhanCong.getText().trim(), "dd/MM/yyyy"));
    }

    dao.create(entity);
    fillToTable();
    clear();
    lblnofity2.setForeground(new Color(0, 128, 0));
    lblnofity2.setText("Thêm mới thành công!");
}

public void update() {
    AreaDetails entity = getForm();
    if (entity == null) return;

    entity.setId(selectedId); 
    dao.update(entity);
    fillToTable();
    lblnofity2.setForeground(new Color(0, 128, 0));
    lblnofity2.setText("Cập nhật thành công!");
}


public void delete() {
    if (selectedId < 0) {
        lblnofity2.setForeground(Color.red);
        lblnofity2.setText("Chưa chọn dữ liệu để xóa!");
        return;
    }
    dao.deleteById(selectedId);
    fillToTable();
    clear();
    lblnofity2.setForeground(new Color(0, 128, 0));
    lblnofity2.setText("Xóa thành công!");
}

public void clear() {
    cboKhuVuc.setSelectedIndex(-1);
    cboNhanVien.setSelectedIndex(-1);
    cboKhauLamViec.setSelectedIndex(-1);
    lblRole.setText("Chức vụ: ");
    Date now = XDate.now();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    txtNgayPhanCong.setText(sdf.format(now));
    selectedId = -1;
}
public void fillToTable(int khuVucId) {
    DefaultTableModel model = (DefaultTableModel) tblChiTietKhuVuc.getModel();
    model.setRowCount(0);

    List<AreaDetails> list = dao.findByKhuVucId(khuVucId);

    for (AreaDetails ct : list) {
        model.addRow(new Object[]{
            ct.getUserName(),
            ct.getRole() != null ? ct.getRole().getRoleName(): "",
            ct.getProductionStage()!= null ? ct.getProductionStage().getProductionStagesName(): "",
            ct.getAssignDate(),
            false
        });
    }
}
private void edit() {
    int row = tblChiTietKhuVuc.getSelectedRow();
    if (row < 0) {
        lblnofity.setForeground(Color.red);
        lblnofity.setText("Chưa chọn dòng!");
        return;
    }

    String username = tblChiTietKhuVuc.getValueAt(row, 0).toString();
    AreaDetails entity = dao.findByUsername(username);

    if (entity != null) {
        setForm(entity);
        tabs.setSelectedIndex(1);
    } else {
        lblnofity2.setForeground(Color.red);
        lblnofity2.setText("Không tìm thấy dữ liệu cho username: " + username);
    }
}
}
