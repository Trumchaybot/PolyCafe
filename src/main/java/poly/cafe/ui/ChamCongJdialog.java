/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.cafe.ui;

import java.awt.Color;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import poly.cafe.dao.impl.AttendanceDAOImpl;
import poly.cafe.dao.impl.EmployeeInfoDAOImpl;
import poly.cafe.entity.Attendance;
import poly.cafe.entity.EmployeeInfo;
import poly.cafe.ui.Controller.ChamCongController;
import poly.cafe.util.XAuth;
import poly.cafe.util.XDialog;
import poly.cafe.dao.AttendanceDAO;
import poly.cafe.dao.EmployeeInfoDAO;

/**
 *
 * @author admin
 */
public class ChamCongJdialog extends javax.swing.JFrame implements ChamCongController {

    private EmployeeInfoDAO thongTinDao = new EmployeeInfoDAOImpl();

    /**
     * Creates new form ChamCongJdialog
     */
    public ChamCongJdialog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNgayLam = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGioVao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGioRa = new javax.swing.JTextField();
        btnVaoCa = new javax.swing.JButton();
        btnRaCa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblNofi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("UserName:");

        jLabel2.setText("Họ tên:");

        jLabel3.setText("Ngày làm việc:");

        jLabel4.setText("Giờ vào ca:");

        jLabel5.setText("Giờ ra ca:");

        txtGioRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGioRaActionPerformed(evt);
            }
        });

        btnVaoCa.setText("Vào ca");
        btnVaoCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaoCaActionPerformed(evt);
            }
        });

        btnRaCa.setText("Ra ca");
        btnRaCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaCaActionPerformed(evt);
            }
        });

        jLabel6.setText("Chấm công");
        jLabel6.setIconTextGap(6);
        jLabel6.setName(""); // NOI18N
        jLabel6.setOpaque(true);

        lblNofi.setText("Nofity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6)
                                    .addComponent(txtHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .addComponent(txtUserName)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(lblNofi)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGioRa)
                                    .addComponent(txtGioVao, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtNgayLam, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))))
                        .addGap(92, 92, 92))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnVaoCa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 310, Short.MAX_VALUE)
                        .addComponent(btnRaCa)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGioVao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGioRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNofi)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVaoCa)
                    .addComponent(btnRaCa))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGioRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGioRaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGioRaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.open();
    }//GEN-LAST:event_formWindowOpened

    private void btnVaoCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaoCaActionPerformed
        // TODO add your handling code here:
        this.vaoCa();
    }//GEN-LAST:event_btnVaoCaActionPerformed

    private void btnRaCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaCaActionPerformed
        // TODO add your handling code here:
        this.raCa();
    }//GEN-LAST:event_btnRaCaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChamCongJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChamCongJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChamCongJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChamCongJdialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChamCongJdialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRaCa;
    private javax.swing.JButton btnVaoCa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblNofi;
    private javax.swing.JTextField txtGioRa;
    private javax.swing.JTextField txtGioVao;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtNgayLam;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insert() {

    }

    @Override
    public void fill(Attendance chamCong) {

    }

    @Override
public void open() {
    EmployeeInfo currentUser = XAuth.getUser();
    if (currentUser == null) {
        lblNofi.setForeground(Color.RED);
        lblNofi.setText("Không có người dùng đăng nhập!");
        return;
    }

    txtUserName.setText(currentUser.getUserName());
    txtUserName.setEditable(false);

    EmployeeInfo nv = thongTinDao.findByUserName(currentUser.getUserName());
    if (nv != null) {
        txtHoTen.setText(nv.getFullName());
    } else {
        txtHoTen.setText("Không tìm thấy");
    }
    txtHoTen.setEditable(false);

    LocalDate today = LocalDate.now();
    txtNgayLam.setText(today.toString());
    txtNgayLam.setEditable(false);

    txtGioVao.setText("");
    txtGioRa.setText("");

    AttendanceDAO dao = new AttendanceDAOImpl();
    Attendance chamCong = dao.findByUserAndDate(currentUser.getUserName(), today);
    if (chamCong != null) {
        if (chamCong.getCheckinTime()!= null) {
            txtGioVao.setText(chamCong.getCheckinTime().toString());
        }
        if (chamCong.getCheckoutTime()!= null) {
            txtGioRa.setText(chamCong.getCheckoutTime().toString());
        }
    }
}

    public void vaoCa() {
    try {
        LocalTime now = LocalTime.now();
        String userName = txtUserName.getText();
        LocalDate ngayLam = LocalDate.parse(txtNgayLam.getText());

        AttendanceDAO dao = new AttendanceDAOImpl();
        Attendance chamCong = dao.findByUserAndDate(userName, ngayLam);

        // Nếu chưa có bản ghi hoặc bản ghi đã có giờ ra => tạo mới
        if (chamCong == null || chamCong.getCheckoutTime()!= null) {
            chamCong = new Attendance();
            chamCong.setUserName(userName);
            chamCong.setWorkDate(ngayLam);
            chamCong.setCheckinTime(now);
            chamCong.setCheckoutTime(null);
            dao.create(chamCong);
            lblNofi.setForeground(new Color(0, 128, 0));
            lblNofi.setText("Đã tạo ca làm và lưu giờ vào ca!");
            
        } else {
            // Nếu có bản ghi nhưng chưa có giờ ra => cập nhật giờ vào
            chamCong.setCheckinTime(now);
            dao.update(chamCong);
            lblNofi.setForeground(new Color(0, 128, 0));
            lblNofi.setText("Đã cập nhật giờ vào ca!");
        }

        txtGioVao.setText(now.format(DateTimeFormatter.ofPattern("HH:mm")));
        txtGioRa.setText("");
    } catch (Exception ex) {
        ex.printStackTrace();
        lblNofi.setForeground(Color.RED);
        lblNofi.setText("Lỗi khi lưu giờ vào ca!");
    }
}




    @Override
    public void raCa() {
        try {
            LocalTime now = LocalTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
            txtGioRa.setText(now.format(formatter));

            String userName = txtUserName.getText();
            LocalDate ngayLam = LocalDate.parse(txtNgayLam.getText(), DateTimeFormatter.ofPattern("yyyy-MM-dd"));

            AttendanceDAO dao = new AttendanceDAOImpl();
            Attendance chamCong = dao.findByUserAndDate(userName, ngayLam);

            if (chamCong == null) {
                XDialog.alert("Không tìm thấy ca làm hôm nay!");
                lblNofi.setForeground(Color.RED);
                lblNofi.setText("Không tìm thấy ca làm hôm nay!");
                return;
            }

            chamCong.setCheckoutTime(now);
            dao.update(chamCong);
            lblNofi.setForeground(new Color(0, 128, 0));
            lblNofi.setText("Đã lưu giờ ra ca!");
        } catch (Exception ex) {
            ex.printStackTrace();
            lblNofi.setForeground(Color.RED);
            lblNofi.setText("Lỗi khi lưu giờ ra ca!");
        }
    }

}
